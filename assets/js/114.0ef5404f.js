(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{223:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"gitlab-安装、备份与还原及常见设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-安装、备份与还原及常见设置","aria-hidden":"true"}},[t._v("#")]),t._v(" gitlab 安装、备份与还原及常见设置")]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("ul",[s("li",[t._v("安装过程比较简单，跑在 docker 上，执行命令即可")]),t._v(" "),s("li",[s("code",[t._v("-v")]),t._v("参数后面的值为卷的名称，自动创建数据卷(如果数据卷不存在)")]),t._v(" "),s("li",[t._v("https://docs.gitlab.com/omnibus/docker/")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("docker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --hostname gitlab.example.com "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --restart always "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gitlab'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -d "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v(":443 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(":80 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":22 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -v gitlab_config:/etc/gitlab "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -v gitlab_log:/var/log/gitlab "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -v gitlab_data:/var/opt/gitlab "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    gitlab/gitlab-ce:latest\n")])])]),s("h2",{attrs:{id:"配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),s("ul",[s("li",[t._v("所有设置 https://docs.gitlab.com/omnibus/settings/README.html")]),t._v(" "),s("li",[t._v("配置位于文件"),s("code",[t._v("/etc/gitlab/gitlab.rb")])]),t._v(" "),s("li",[s("code",[t._v("/var/opt/gitlab/gitlab-rails/etc")]),t._v("文件夹的配置文件则是分开的，清晰明了，可用于查看。"),s("code",[t._v("database.yml")]),t._v("是数据库配置文件，"),s("code",[t._v("gitlab.yml")]),t._v("是应用配置")]),t._v(" "),s("li",[t._v("注意"),s("code",[t._v("gitlab.yml")]),t._v("的开头提示"),s("code",[t._v("此文件由gitlab-ctl管理。手动更改将删除！要更改以下内容，请编辑/etc/gitlab/gitlab.rb，运行“sudo gitlab-ctl reconfigure”。")]),t._v("，所以最好不要直接编辑这个页面")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.gitlab.com/ce/administration/restart_gitlab.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何重启 gitlab"),s("OutboundLink")],1),t._v("，执行"),s("code",[t._v("sudo gitlab-ctl restart")]),t._v("重启。只有通过"),s("code",[t._v("Omnibus packages")]),t._v("安装的，使配置生效命令"),s("code",[t._v("sudo gitlab-ctl reconfigure")]),t._v("才有效。经过实践，发现修改"),s("code",[t._v("gitlab.yml")]),t._v("需要重启才能生效，而修改"),s("code",[t._v("gitlab.rb")]),t._v("则只需要重新配置，并且会覆盖"),s("code",[t._v("gitlab.yml")]),t._v("的设置")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/gitlab.yml.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("更改 gitlab.yml 和 application.yml 设置"),s("OutboundLink")],1),t._v("，这里说明了"),s("code",[t._v("gitlab.rb")]),t._v("与"),s("code",[t._v("gitlab.yml")]),t._v("等配置文件的关系，由"),s("code",[t._v("gitlab.rb")]),t._v("生成配置文件，执行命令"),s("code",[t._v("sudo gitlab-ctl reconfigure")]),t._v("使更改生效。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitlab.rb 模板"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/files/gitlab-cookbooks/gitlab/templates/default/gitlab.yml.erb",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitlab.yml 模板"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"仓库主机地址、服务器地址、wiki-文件上传地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#仓库主机地址、服务器地址、wiki-文件上传地址","aria-hidden":"true"}},[t._v("#")]),t._v(" 仓库主机地址、服务器地址、wiki 文件上传地址")]),t._v(" "),s("ul",[s("li",[t._v("文档见 https://docs.gitlab.com/omnibus/settings/configuration.html#configuring-the-external-url-for-gitlab")]),t._v(" "),s("li",[t._v("安装的时候没有指定 host，项目克隆地址使用了默认的 host 地址，需要手动修改设置")]),t._v(" "),s("li",[t._v("修改配置文件"),s("code",[t._v("/etc/gitlab/gitlab.rb")]),t._v("，设置"),s("code",[t._v("external_url ‘https://git.example.com’")]),t._v("，执行命令"),s("code",[t._v("sudo gitlab-ctl reconfigure")]),t._v("重新配置快速生效")])]),t._v(" "),s("h2",{attrs:{id:"访问内部-postgresql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问内部-postgresql","aria-hidden":"true"}},[t._v("#")]),t._v(" 访问内部 PostgreSQL")]),t._v(" "),s("ul",[s("li",[t._v("参考教程 https://www.cnblogs.com/UniqueColor/p/7767012.html")]),t._v(" "),s("li",[t._v("深入 PostgreSQL 身份验证 https://www.tuicool.com/articles/bQfmUr")]),t._v(" "),s("li",[t._v("以下按默认情况处理，并做适当解释")]),t._v(" "),s("li",[t._v("查看 gitlab 数据库配置文件 "),s("code",[t._v("cat /var/opt/gitlab/gitlab-rails/etc/database.yml")])]),t._v(" "),s("li",[t._v("查看数据库验证方式配置文件 "),s("code",[t._v("cat /var/opt/gitlab/postgresql/data/pg_hba.conf")])]),t._v(" "),s("li",[t._v("查看用户 "),s("code",[t._v("cat /etc/passwd")])]),t._v(" "),s("li",[t._v("切换登录用户"),s("code",[t._v("su - gitlab-psql")]),t._v("，由于默认配置是使用 peer 方式认证，认证工作完全交给系统，所以系统用户名必须与登录数据库用户名一致。")]),t._v(" "),s("li",[t._v("参数加横杠有两个作用，第一是切换用户后同时切换到工作目录，第二是添加该用户相关环境变量，否则 psql 无法使用")]),t._v(" "),s("li",[t._v("根据数据库配置填写数据库登录主机以及登陆的数据库 "),s("code",[t._v("psql -h /var/opt/gitlab/postgresql -d gitlabhq_production")])]),t._v(" "),s("li",[t._v("以下是数据库操作命令")]),t._v(" "),s("li",[t._v("查看帮助 "),s("code",[t._v("\\h")])]),t._v(" "),s("li",[t._v("查看数据库列表 "),s("code",[t._v("\\l")])]),t._v(" "),s("li",[t._v("查看多表 "),s("code",[t._v("\\dt")])]),t._v(" "),s("li",[t._v("查看单表 "),s("code",[t._v("\\d users")])]),t._v(" "),s("li",[t._v("查看索引 "),s("code",[t._v("\\di")])]),t._v(" "),s("li",[t._v("执行查询 "),s("code",[t._v("select id,encrypted_password,name,username from users;")])]),t._v(" "),s("li",[t._v("退出 "),s("code",[t._v("\\q")])]),t._v(" "),s("li",[t._v("退出当前登录用户 "),s("code",[t._v("exit")])])]),t._v(" "),s("h2",{attrs:{id:"备份与还原"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#备份与还原","aria-hidden":"true"}},[t._v("#")]),t._v(" 备份与还原")]),t._v(" "),s("h3",{attrs:{id:"备份"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#备份","aria-hidden":"true"}},[t._v("#")]),t._v(" 备份")]),t._v(" "),s("ul",[s("li",[t._v("官方文档：https://docs.gitlab.com/ce/raketasks/backup_restore.html")]),t._v(" "),s("li",[t._v("由于使用 docker 部署，所以不用按照官方文档走，只需要备份 docker 容器产生的数据，并且是放在数据卷中的数据")]),t._v(" "),s("li",[t._v("备份与还原 docker 数据卷数据，参考 https://docs.docker.com/storage/volumes/#backup-restore-or-migrate-data-volumes")]),t._v(" "),s("li",[t._v("只需要备份"),s("code",[t._v("/var/opt/gitlab")]),t._v("以及"),s("code",[t._v("/etc/gitlab")]),t._v("这两个文件夹即可，一个是存放 gitlab 数据,一个存放配置。日志路径位于"),s("code",[t._v("/var/log/gitlab")]),t._v("。")]),t._v(" "),s("li",[t._v("主要命令如下：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 挂载gitlab容器的所有卷到alpine容器，将容器backup目录映射到当前目录，执行备份命令，依次备份所有数据即可")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /var/opt/gitlab\n$ docker run --rm --volumes-from gitlab -v "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(":/backup alpine "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" cvf /backup/backup.tar "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),s("ul",[s("li",[t._v("因为要备份多个文件夹，可进入交互命令环境进行操作")])]),t._v(" "),s("h3",{attrs:{id:"还原"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#还原","aria-hidden":"true"}},[t._v("#")]),t._v(" 还原")]),t._v(" "),s("ul",[s("li",[t._v("得到备份数据的压缩文件，创建卷之后还原即可。还原的时候多一步创建卷，类似创建 gitlab 容器时的操作，得到数据卷，再执行类似备份的操作，运行另外的容器挂载新创建容器的卷，只不过压缩变成解压")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个匿名卷，挂载到alpine容器的`/var/opt/gitlab`目录")]),t._v("\n$ docker run -v /var/opt/gitlab --name alpine_data alpine /bin/sh\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 挂载容器alpine_data的数据卷，进入命令交互环境")]),t._v("\n$ docker run -it --rm --volumes-from alpine_data -v "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(":/backup alpine "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在容器内执行下面的还原命令")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /var/opt/gitlab "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(' xvf /backup/backup.tar"\n')])])]),s("ul",[s("li",[t._v("进入容器之后，还原多个压缩包即可，提前创建好对应数据卷")])]),t._v(" "),s("h3",{attrs:{id:"运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行","aria-hidden":"true"}},[t._v("#")]),t._v(" 运行")]),t._v(" "),s("ul",[s("li",[t._v("运行过程同安装过程，挂载上面的数据卷即可，也可以直接解压到主机目录，进行主机目录映射")]),t._v(" "),s("li",[t._v("注意一定要确认解压的文件夹的相对路径是否正确，这是可能会犯的一个错。因为上面的打包过程，很可能把数据打包成带路径"),s("code",[t._v("/var/opt/gitlab")]),t._v("的格式，导致容器中的数据位于"),s("code",[t._v("/var/opt/gitlab/var/opt/gitlab")])]),t._v(" "),s("li",[t._v("如果容器一直重启，可能是文件权限问题，执行以下命令更新文件权限")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("gitlab容器名或容器id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" update-permissions\n")])])]),s("h2",{attrs:{id:"svn-迁移到-git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#svn-迁移到-git","aria-hidden":"true"}},[t._v("#")]),t._v(" svn 迁移到 git")]),t._v(" "),s("ul",[s("li",[t._v("命令参考文档 https://git-scm.com/docs/git-svn")]),t._v(" "),s("li",[t._v("教程参考，强烈推荐 https://git-scm.com/book/zh/v2/Git-%E4%B8%8E%E5%85%B6%E4%BB%96%E7%B3%BB%E7%BB%9F-%E8%BF%81%E7%A7%BB%E5%88%B0-Git")]),t._v(" "),s("li",[t._v("其它参考，过程都大同小异：")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/xueshanhaizi/article/details/54929365",target:"_blank",rel:"noopener noreferrer"}},[t._v("SVN 迁移到 git"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000014713162",target:"_blank",rel:"noopener noreferrer"}},[t._v("SVN 迁移到 GIT 且保留提交日志"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.blogjava.net/lishunli/archive/2012/01/15/368562.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SVN 迁移到 Git 的过程（+ 一些技巧）"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/Hello_Mr_Cc/article/details/72742503",target:"_blank",rel:"noopener noreferrer"}},[t._v("svn 迁移到 git 仓库并保留 commit 历史记录"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("以下操作在 ubuntu18.04 上执行，其它 linux 未测试，windows 上可以"),s("code",[t._v("shift+右键")]),t._v("点击菜单"),s("code",[t._v("在此处选择linux shell")]),t._v("以打开 wsl 子系统，没装的话"),s("code",[t._v("wget")]),t._v("改成"),s("code",[t._v("curl")]),t._v("，该命令只是下载文件而已")]),t._v(" "),s("li",[t._v("windows 上安装了 git 的话支持"),s("code",[t._v("git svn")]),t._v("命令，ubuntu 需要安装"),s("code",[t._v("apt update && apt install git-svn")])]),t._v(" "),s("li",[t._v("首先在一个仓库下执行以下命令得到所有提交者信息，等号填写 git 仓库对应的用户名和邮箱")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("svn log -q "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" -F "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'/^r/ {sub("^ ", "", '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v('); sub(" $", "", '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("); print "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v('" = "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v('" <"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v('">"}\'')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" -u "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" users.txt\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("user1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" user1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v("\nuser2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" user2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("\nuser3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" user3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[t._v("从 svn clone 到本地"),s("code",[t._v("git svn clone http://svn-server:port/project/trunk/path1/path2 --no-metadata --authors-file=users.txt projectname")])]),t._v(" "),s("li",[s("code",[t._v("--authors-file")]),t._v("参数指定提交者信息映射文件，"),s("code",[t._v("--no-metadata")]),t._v("去掉多余元数据信息")]),t._v(" "),s("li",[t._v("抓一份"),s("code",[t._v(".gitignore")]),t._v("模板下来，"),s("code",[t._v("mkdir .gitignore && wget -O .gitignore/VisualStudio.gitignore https://raw.githubusercontent.com/github/gitignore/master/VisualStudio.gitignore")])]),t._v(" "),s("li",[t._v("添加忽略文件")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" projectname\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/.gitignore/VisualStudio.gitignore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" .gitignore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" svn show-ignore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" .gitignore\n")])])]),s("ul",[s("li",[t._v("添加文件 "),s("code",[t._v(".gitignore")]),t._v("到版本控制 "),s("code",[t._v("git add .gitignore")])]),t._v(" "),s("li",[t._v("本地提交 "),s("code",[t._v("git commit -a -m 'add .gitignore'")])]),t._v(" "),s("li",[t._v("添加远程仓库地址 "),s("code",[t._v("git remote add origin http://git-server:port/project.git")])]),t._v(" "),s("li",[t._v("推送本地 master 分支到远程，"),s("code",[t._v("-u")]),t._v("参数会让 master 关联远程分支 "),s("code",[t._v("git push -u origin master")])]),t._v(" "),s("li",[t._v("其他操作：从 svn 更新 "),s("code",[t._v("git svn rebase")]),t._v("、提交到 svn "),s("code",[t._v("git svn dcommit")])])]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("gitlab 是个内存大户，因此主机内存最好大于 2G，并做资源限制，否则占用了过高内存，会导致 gitlab 服务 503，甚至整个主机都变卡")]),t._v(" "),s("li",[t._v("此系统一开始装在内网的 win7 主机，使用"),s("code",[t._v("docker for windows")]),t._v("安装，后因需要迁移到服务器，只需要迁移数据卷中数据即可，十分方便")]),t._v(" "),s("li",[t._v("由 svn 迁移到 git，使用 git 自带的"),s("code",[t._v("git svn clone url")]),t._v("即可方便分离 svn 中的大项目为一个个单独的项目。因为原来的存法是所有项目在某一类文件夹，各个项目的提交记录混在一起，不方便查看，而且项目多了不方便管理")])])])},[],!1,null,null,null);a.default=r.exports}}]);