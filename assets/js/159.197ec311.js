(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{219:function(e,t,r){"use strict";r.r(t);var a=r(0),v=Object(a.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"_2018年总结与展望"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2018年总结与展望","aria-hidden":"true"}},[e._v("#")]),e._v(" 2018年总结与展望")]),e._v(" "),r("h2",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),r("p",[e._v("上一年没做什么正经的计划，主要是好好锻炼身体、练好英语、什么能够让自己更好的创造和设计就去学什么。")]),e._v(" "),r("p",[e._v("没有锻炼，长期久坐慢慢变得油腻。每天英语晨读，时不时听一下TED，坚持来了差不多两个月。接下来是重点，学习了自己觉得有用的东西。")]),e._v(" "),r("h3",{attrs:{id:"事件一，学习vue"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事件一，学习vue","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件一，学习vue")]),e._v(" "),r("p",[e._v("年初学习了一下nodejs，并用electron + vue写了几个hello-world级别的demo，我对前端的认知已然落后千丈，之前还停留在手写js操作dom，并不知道vue、react等框架，不知道前端项目工程化构建。原来写页面还可以这么玩，简直震惊。明白了bower，npm原来是包管理，类似于nuget，下载js库原来不用自己从网页下载。响应式web开发，保存编辑立马刷新局部页面（热更新），当时的成就感得到了很大的满足，但还是不愿承认自己被前端俘虏了。后来接触到iView这个ui框架，正好当时公司需要换ui框架，就推荐了iView。因为vue相比react入门足够简单，所以上手做项目很简单，效果也很显著，即漂亮开发又快。对于本人来说，随着深入使用，遇到的问题越来越多，但我都一一找到并解决了，说坑也不坑，说不坑也很坑。因为vue跟你想像的不一样，又不像jq那样随意用，能力不行的话根本不能解决使用vue出现的各种奇葩问题。也就是那会，我的浏览器调试js能力猛涨，所有的问题都是断点调试和一点点经验解决的。")]),e._v(" "),r("p",[e._v("以上，想说的就是，vue入门简单，并能极大提高生产力，确实是值得学习，特别是对前端经验不是特别丰富但是复制粘贴贼溜的同学来说。只要队伍里有一个前端大佬，那么直接上吧，对于老鸟来说他们可能不习惯也不会，还是觉得jq或者原生js好用，看个人喜好吧。它们是好用并且能提高生产力的东西，我学习了，并将它们带到项目，并且小有成绩，后面弃用的原因是团队里只有我会只有我一个能解决各种问题，对管理层来说这不是一件好事，最后公司还是决定花大价钱买用了好几年的ui的新版本。一切又回到原点，但不管怎么说我努力了，虽然说有点小失望，但一切以公司利益为主吧。")]),e._v(" "),r("h3",{attrs:{id:"事件二，加入开源团队"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事件二，加入开源团队","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件二，加入开源团队")]),e._v(" "),r("p",[e._v("这个起源于一个pr(pull requests)，添加了一个判断。虽然微不足道，但是让人感觉参与到开源了。后面逐渐修改其他问题，提交代码，所以有幸加入进去正式成为其中一员。首先是添加脚本解决每次安装nuget包需要手动复制dll的问题。这个时候"),r("code",[e._v("dot net core")]),e._v("已经开始火了，越来越多人用，我尝试core版本的使用，解决运行和部署的一些问题。慢慢的core的势头开始变猛，我便尝试着迁移了一个mvc项目到core，中间也学到了不少core相关的理念，踩了不少坑。最后个人感觉比较有意义的事情就是建立了文档站点，丰富分档，将所有教程集中于文档库。")]),e._v(" "),r("p",[e._v("参与开源，可以结识更多大牛，认识到自己更多的不足，汲取大佬们的宝贵经验。其次可以让个人名气提升那么一丢丢，付出总会有回报的。总之，这是一件百利而无一害的事情。")]),e._v(" "),r("h3",{attrs:{id:"事件三，换环境"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事件三，换环境","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件三，换环境")]),e._v(" "),r("p",[e._v("下半年比较大的事情是换了工作环境，由于家庭原因必须得换个地方。虽然当时公司正值用人之际，但我也有不得不离开的原因。可能知道我去意已决，公司也没有过多挽留。正是由于开源项目的贡献以及平时写的一些的博客，我有幸得到大佬的推荐并顺利入职新公司。突然觉得这是自己做了非常正确的事情，付出的努力得到了回报。")]),e._v(" "),r("p",[e._v("新的环境节奏紧凑，没那么多时间学习考虑新的技术和提高效率，一切以完成任务为主。这个时候之前鼓捣的各种小技术小技巧都派上用场了。比如api文档，用的swagger，之前听过没实际用过，这个是有点失策，后来优化了一下，使大家用的更顺手。还有部署项目，换成"),r("code",[e._v("web deploy")]),e._v("，再也不用复制粘贴来部署。其它就是一些必须掌握的编程思想，相关领域的技术知识了。项目中前端工程量大忙不过来，我自荐帮忙完成一部分前端工作，这个也算学以致用吧，鼓捣的东西都用上了。")]),e._v(" "),r("p",[e._v("中间有个小插曲，就是给前端MM讲解某个api用法，解释相关业务流程时，因为说了好多次，语气变得不耐烦，交流态度非常不好。事后经老大开导，不要觉得自己技术叼就搞得自己很牛逼的样子，遇到技术比你差点的，要耐心点多说几次。即使人家技术再差，也轮不到你去说人家，也不要自以为是，要多多体谅。可能在上家公司习惯了，因为教的都是男同事，说多了很不耐烦，直接就控制不住自己。那时候大家也觉得没什么，知道都是为了教他对他好。现在嘛，我说了我该说的，你不会是你的事情了，我也没义务教你（这么社会的嘛）。")]),e._v(" "),r("h3",{attrs:{id:"事件四，学习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事件四，学习","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件四，学习")]),e._v(" "),r("p",[e._v("在学习这件事上，我自认也不差，但就是没有研究深度，也就是基础差。用大佬的话来讲就是，整天研究这个那个，学习的都是顶层知识，先不说学习这么多新技术有没有用工资涨没涨，底层没学好一遇到问题就歇菜。这里说的基础差实际上是计算机底层，最简单的位运算，到程序数据在内存读取，cpu多任务调度，死锁（操作系统流水线这些就不要求了，简单列举一些点，不一定准确）。只有了解了程序代码从运行到出结果的整个过程，才能知道代码怎么写才能提高运行效率，了解底层，才能看的懂GC，内存管理，垃圾回收等文章。底层打好基础才能走得更远。我打心底认同大佬的观点，并找了一些相关视频进行学习提高，硬件基础打几层，编程语言底层基础也一起夯实，还做了一些笔记，收获颇丰。")]),e._v(" "),r("p",[e._v("在学习上，另一点就是哪些该学哪些不应该花时间学习。一方面我主动想学过的东西，大部分都是因为新奇好玩，从中淘汰掉一些维护力度不大的、还不能用于生产的、应用（业务）场景不广的，剩下的部分中的大部分自己都用上了并且效果不错。另一方面是我要深耕某个领域，主动寻找该领域相关技术进行学习，如果学有所成那就是进步，投入生产那就是学以致用产生效益了。所以研究和学习新技术是很有必要的，只是要选好方向，挑好重点，努力让自己的学习有成效。这里有个感想就是，研究学习公司可能用到，对现在工作有帮助的技术，一来自己感兴趣研究，二来研究出结果了有助于工作能提高自己在公司的价值。")]),e._v(" "),r("p",[e._v("这里还有话说，学习或者贡献代码，需要非常多的时间，经常熬到深夜，为此头发也掉了很多。从长远来看这么做得不偿失的，毕竟留得青山在不怕没柴烧。")]),e._v(" "),r("h3",{attrs:{id:"事件五，读书"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事件五，读书","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件五，读书")]),e._v(" "),r("p",[e._v("学习事件最后提到时间和熬夜这两个事情上，时间需要花在有价值的事情上，熬夜是拿白天没完成工作惩罚自己，生活不止眼前的工作，想想自己的亲人。")]),e._v(" "),r("p",[e._v("可以说一旦开启疯狂学习模式，很容易迷失，只知道不断学习却不知学来有何用，导致最后“求别更新，学不下去了”。学习需要有针对性，同时也要留时间来思考。")]),e._v(" "),r("p",[e._v("12月去图书馆，本来想找Dot Net Core相关书籍，结果没找到，拿了本《软件随想录》（joel on software），"),r("a",{attrs:{href:"https://www.joelonsoftware.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("相关网址"),r("OutboundLink")],1),e._v("。里面介绍了软件部落酋长joel关于软件和从事软件开发行业的一些想法、建议、感想。看一了部分，觉得一部分是自己以前走过的路，一部分可能是自己即将走的路但可能改变。这正是读书的好处之一，我们处于容易改变的十年之中，任何一个改变转变，都会有不一样的结果，我们像有没有固定路线的航班，现在遇到的人和事，做的事和思考的东西，都会让我们走不同路线在不同地点降落。参考《The Defining Decade》，以及相关TED"),r("a",{attrs:{href:"https://www.ted.com/talks/meg_jay_why_30_is_not_the_new_20",target:"_blank",rel:"noopener noreferrer"}},[e._v("30岁不再是新的20岁"),r("OutboundLink")],1),e._v("，所以把握好现在的成年时期，多读点书，这是最值得投资的事情之一。")]),e._v(" "),r("h2",{attrs:{id:"计划"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#计划","aria-hidden":"true"}},[e._v("#")]),e._v(" 计划")]),e._v(" "),r("p",[e._v("首先，希望我的家人健健康康的。生活不止眼前的苟且，还有诗和远方的田野。多花点时间陪陪家人，他们才是我心目中排第一位的。如果可以，不要熬夜，对自己和对家人负责。这是从现在开始，希望自己一直能做到的。")]),e._v(" "),r("p",[e._v("读书，多读读工作领域相关的思考类书籍，这个行业是怎么发展起来的，未来将是什么趋势，这将让自己明白自己的工作到底是什么，给社会带来哪些改变。另一方面也会促使自己学着去思考自己的工作，自己需要做些什么提升和改良，带着更强的目的性去工作，而不是盲目工作，日复一日时间一天天过去了却不知道自己干了什么。下一本要读的是《梦断代码》（《Dream In Code》）。")]),e._v(" "),r("p",[e._v("学习，学习DevOps（"),r("a",{attrs:{href:"https://www.cnblogs.com/jetzhang/p/6068773.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一分钟告诉你究竟DevOps是什么鬼？"),r("OutboundLink")],1),e._v("）。单纯的技术已经不能满足现在的需求了，现在需要的是各种技术的组合，糅合在一起正常运转，而且需要创造的技术也越来越少了，未来强大的训练好的AI模块也能被普通开发者调用。技术软件开发行业发展至今，已经不像以前一个人撑起一个软件了，更多的是团队协作、快速交付、强大的功能和多变的需求。感觉DevOps更多的是敏捷开发中需要遵循的准则，我们只需一条心，更快的为客户解决问题。针对以上目标，学习相应的思想，打好相关技术基础，只是前提，基础必须先走一步。")]),e._v(" "),r("h2",{attrs:{id:"最后"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#最后","aria-hidden":"true"}},[e._v("#")]),e._v(" 最后")]),e._v(" "),r("p",[e._v("不求计划能全部完成，只希望自己能不断进步，只需要今天比昨天好一点点就够了。")])])},[],!1,null,null,null);t.default=v.exports}}]);