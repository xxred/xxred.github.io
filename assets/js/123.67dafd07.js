(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{220:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"通过-newlife-xcode-迁移任意现有数据库到任意数据库（附分表分库方法）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-newlife-xcode-迁移任意现有数据库到任意数据库（附分表分库方法）","aria-hidden":"true"}},[t._v("#")]),t._v(" 通过 NewLife.XCode 迁移任意现有数据库到任意数据库（附分表分库方法）")]),t._v(" "),a("ul",[a("li",[t._v("本文背景是将其他系统的数据库迁移到另一个数据库（仅需 20 行代码），也可以作为项目迁移用，生成自己系统的专属实体代码结构。比如将一些主流的数据库迁移到"),a("a",{attrs:{href:"https://github.com/NewLifeX/X",target:"_blank",rel:"noopener noreferrer"}},[t._v("NewLife.XCode"),a("OutboundLink")],1),t._v("，开发基于 XCode 的项目")]),t._v(" "),a("li",[t._v("其实只是想拿到别的数据库结构后，生成实体代码进行开发，顺便就更新一下大佬的"),a("a",{attrs:{href:"http://www.cnblogs.com/asxinyu/archive/2012/04/26/2470838.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("利用 XCode 20 行代码搞定任何数据库的迁移"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"源数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源数据库","aria-hidden":"true"}},[t._v("#")]),t._v(" 源数据库")]),t._v(" "),a("ul",[a("li",[t._v("如果已有源数据库，请跳下一步")]),t._v(" "),a("li",[t._v("此教程以 IdentityServer4 的 "),a("a",{attrs:{href:"https://github.com/IdentityServer/IdentityServer4.Templates",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ids4Admin"),a("OutboundLink")],1),t._v(" 的"),a("code",[t._v("is4admin")]),t._v("模板为例")]),t._v(" "),a("li",[t._v("首先安装模板"),a("code",[t._v("dotnet new -i identityserver4.templates")]),t._v("，然后新建项目"),a("code",[t._v("dotnet new is4admin")]),t._v("，运行项目"),a("code",[t._v("dotnet run")]),t._v("，访问"),a("a",{attrs:{href:"http://localhost:5000",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:5000"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("运行一次项目之后会得到 sqlite 数据库文件，到这里我们就有了源数据库\n"),a("img",{attrs:{src:"https://raw.githubusercontent.com/xxred/xxred.github.io/master/docs/newlifex/imgs/2019-03-20-15-28-44.png",alt:" "}}),t._v(" "),a("img",{attrs:{src:"https://raw.githubusercontent.com/xxred/xxred.github.io/master/docs/newlifex/imgs/2019-03-20-15-29-40.png",alt:" "}})])]),t._v(" "),a("h2",{attrs:{id:"码神工具-xcoder-生成实体代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#码神工具-xcoder-生成实体代码","aria-hidden":"true"}},[t._v("#")]),t._v(" 码神工具 XCoder 生成实体代码")]),t._v(" "),a("ul",[a("li",[t._v("以下将完成模型文件的导出和实体类代码生成，对于表结构差别有点大，并且数据量不多的情况，可以生成实体类手动执行"),a("code",[t._v("读取数据->写入数据")]),t._v("的操作，这样可以执行一些数据手动处理。比如不仅是迁移，并且数据结构有一点变化，这样就可以从原数据库读取数据，处理后插入新的数据库。"),a("strong",[t._v("否则就采用反向工程获取表结构逆向生成新的数据库结构直接把数据从源数据库导入新数据库。")])])]),t._v(" "),a("h3",{attrs:{id:"下载-xcoder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载-xcoder","aria-hidden":"true"}},[t._v("#")]),t._v(" 下载 XCoder")]),t._v(" "),a("ul",[a("li",[t._v("源码地址 https://github.com/NewLifeX/XCoder ，建议自己拉代码下来编译")]),t._v(" "),a("li",[t._v("编译完成后，在输出目录找到"),a("code",[t._v("XCoder.exe")]),t._v("，以及"),a("code",[t._v("XCoder.exe.config")]),t._v("，双击打开运行码神工具")])]),t._v(" "),a("h3",{attrs:{id:"配置连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置连接","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置连接")]),t._v(" "),a("ul",[a("li",[t._v("打开"),a("code",[t._v("XCoder.exe.config")]),t._v("，添加数据库连接，码神工具内置了支持的数据库的连接写法，现在我们配置 sqlite 的连接，并把刚刚的"),a("code",[t._v("IdentityServer.db")]),t._v("复制到码神工具目录\n"),a("img",{attrs:{src:"https://raw.githubusercontent.com/xxred/xxred.github.io/master/docs/newlifex/imgs/2019-03-20-15-33-13.png",alt:" "}}),t._v(" "),a("img",{attrs:{src:"https://raw.githubusercontent.com/xxred/xxred.github.io/master/docs/newlifex/imgs/2019-03-20-15-32-42.png",alt:" "}})])]),t._v(" "),a("h3",{attrs:{id:"导出模型文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导出模型文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 导出模型文件")]),t._v(" "),a("ul",[a("li",[t._v("打开码神工具，并依次打开工具-数据建模工具")]),t._v(" "),a("li",[t._v("在连接处选择刚刚配置的连接 IdentityServer 并点击连接，导出模型，即可得到 xml 模型文件\n"),a("img",{attrs:{src:"https://raw.githubusercontent.com/xxred/xxred.github.io/master/docs/newlifex/imgs/2019-03-20-15-43-45.png",alt:" "}})])]),t._v(" "),a("h3",{attrs:{id:"生成实体模型代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成实体模型代码","aria-hidden":"true"}},[t._v("#")]),t._v(" 生成实体模型代码")]),t._v(" "),a("ul",[a("li",[t._v("新建控制台项目，Nuget 安装"),a("code",[t._v("NewLife.XCode")]),t._v("，如果没有 tt 文件，可从源码"),a("a",{attrs:{href:"https://github.com/NewLifeX/X/blob/master/XCode/Build.tt",target:"_blank",rel:"noopener noreferrer"}},[t._v("X 组件"),a("OutboundLink")],1),t._v("中获取，注意"),a("code",[t._v("NewLife.Core")]),t._v("和"),a("code",[t._v("XCode")]),t._v("的 dll 路径，如果不对的话可设置为当前目录，并将码神工具目录下的 dll 放到与 tt 文件相同目录")])]),t._v(" "),a("div",{staticClass:"language-t4 extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<#@ assembly name="NewLife.Core.dll" #>\n<#@ assembly name="XCode.dll" #>\n')])])]),a("ul",[a("li",[t._v("将刚导出的模型文件复制到与 tt 相同的目录，vs 中选中 tt 文件，选择右键运行自定义工具，稍等片刻，即可生成实体代码文件\n"),a("img",{attrs:{src:"https://raw.githubusercontent.com/xxred/xxred.github.io/master/docs/newlifex/imgs/2019-03-20-16-59-21.png",alt:" "}})])]),t._v(" "),a("h2",{attrs:{id:"迁移过程（重点）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迁移过程（重点）","aria-hidden":"true"}},[t._v("#")]),t._v(" 迁移过程（重点）")]),t._v(" "),a("ul",[a("li",[t._v("主要是更新"),a("code",[t._v("http://www.cnblogs.com/asxinyu/archive/2012/04/26/2470838.html")]),t._v("对应的新版代码实现")])]),t._v(" "),a("h3",{attrs:{id:"利用反向工程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用反向工程","aria-hidden":"true"}},[t._v("#")]),t._v(" 利用反向工程")]),t._v(" "),a("ul",[a("li",[t._v("整个过程实际上就是先通过反向工程拿到表架构信息，再通过 XCode 内置的数据同步备份功能实现迁移，指定表架构信息和目标连接字符串即可")]),t._v(" "),a("li",[t._v("原理就是根据表架构信息和目标连接字符串，创建目标数据库表，并生成批量插入语句执行")]),t._v(" "),a("li",[t._v("这里可以选择单表备份或者多表")])]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <summary>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 拷贝数据库，只需要数据库连接字符串和源数据库即可")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// </summary>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="originConnName">源数据库连接字符串名</param>')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="desConnName">目的数据库连接字符串名</param>')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="perCount">每次获取的记录数目，如果默认-1则会自动调用函数计算一个合理值</param>')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CopyDataBase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),t._v(" originConnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),t._v(" desConnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" perCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//思路：通过源数据库获取架构信息，然后反向工程,然后导出数据")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DAL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("originConnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取源数据库的架构信息")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tableList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IDataTable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理表的架构信息")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dataTable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Tables"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//过滤掉视图")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataTable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IsView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2019-03-31 处理列名称，后续版本会修复此bug，不用此处理")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CheckColumnName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataTable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修正列的类型")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FixColumns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataTable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n                tableList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataTable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            dal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SyncAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tableList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ToArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" desConnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <summary>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 兼容处理，类型转换")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// </summary>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="columns"></param>')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FixColumns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IDataColumn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" indexColumns "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Indexes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SelectMany")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ToArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" column "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 主键、唯一、类型为text的全部修改为varchar(50)")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PrimaryKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n                     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("indexColumns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Equals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" StringComparison"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrdinalIgnoreCase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RawType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" StringComparison"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrdinalIgnoreCase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n                column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RawType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"varchar(50)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CheckColumnName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IDataColumn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dataTableColumn "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataTableColumn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IsNullOrWhiteSpace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    dataTableColumn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dataTableColumn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ColumnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"利用分表分库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用分表分库","aria-hidden":"true"}},[t._v("#")]),t._v(" 利用分表分库")]),t._v(" "),a("ul",[a("li",[t._v("XCode 自带分表分库功能，而且很方便，通过自行指定目标数据库连接字符串，以及不同表名，可将数据保存到目标数据库，甚至不同分表")])]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <summary>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 通过实体操作接口批量拷贝数据库，也可作为分表分库功能使用")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// </summary>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="factory"></param>')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="originConnName"></param>')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="desConnName"></param>')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="perCount"></param>')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CopyDataTable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IEntityOperate")]),t._v(" factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),t._v(" originConnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),t._v(" desConnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" perCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分页获取数据，并更新到新的数据库，通过更改数据库连接来完成")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FixColumns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DataTable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" allCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tableName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TableName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("perCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" perCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetDataRowsPerConvert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pages "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Ceiling")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("allCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("perCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" pages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 与上面代码等效")]),t._v("\n                factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ConnName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" originConnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// factory.TableName = tableName;")]),t._v("\n\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" modelList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FindAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Empty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Empty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Empty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" perCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" perCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ConnName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" desConnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 分表分库的时候，这里可加上判断是否分表的逻辑，即可将数据保存到分表")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// factory.TableName = tableName + DateTime.Now.ToString("yyyy-MM-dd");')]),t._v("\n\n                modelList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Insert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ExcCopy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),t._v(" originConnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),t._v(" desConnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" perCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" asm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ApiClaims"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Assembly"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" entityTypes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" asm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetTypes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Where")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EntityBase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IsAssignableFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ToArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" entityType "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" entityTypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" factory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entityType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AsFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CopyDataTable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" originConnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" desConnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" perCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <summary>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 兼容处理，类型转换")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// </summary>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="columns"></param>')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FixColumns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IDataColumn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" indexColumns "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Indexes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SelectMany")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ToArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" column "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 主键、唯一、类型为text的全部修改为varchar(50)")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PrimaryKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n                     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("indexColumns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Equals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" StringComparison"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrdinalIgnoreCase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RawType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" StringComparison"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrdinalIgnoreCase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n                column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RawType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"varchar(50)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CheckColumnName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IDataColumn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dataTableColumn "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataTableColumn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IsNullOrWhiteSpace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    dataTableColumn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dataTableColumn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ColumnName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <summary>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 根据数据表的记录总数来设置一个合理的每次转换数目。数据量大，一次性导出导入不合理")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// </summary>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <param name="allCount">数据表记录总数</param>')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <returns>每次转换的记录数</returns>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetDataRowsPerConvert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" allCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果","aria-hidden":"true"}},[t._v("#")]),t._v(" 结果")]),t._v(" "),a("ul",[a("li",[t._v("以表"),a("code",[t._v("ClientScopes")]),t._v("的结果为例")]),t._v(" "),a("li",[t._v("反向功能同步，由于事先全部逆向创建所有表了，所以这里只有同步时的插入语句")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(":53:55.258  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" N - Select * From ClientScopes limit "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(":53:55.258  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" N - 同步"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ClientScopes/identityServer_sqlite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("数据 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(":53:55.270 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v(" N "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" Insert Into ClientScopes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id,Scope,ClientId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'admin_ui_profile'")]),t._v(",1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'admin_api'")]),t._v(",1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'openid'")]),t._v(",1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(":53:55.272  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" N - 同步"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ClientScopes/identityServer_sqlite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("完成，共"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("行，耗时14ms，速度209tps\n")])])]),a("ul",[a("li",[t._v("分表分库同步，这里是通过反射遍历所有表的类型，通过实体操作接口一个个表同步，所以是建一个表同步一个表的数据")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":27:33.896  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" N - ClientScopes.Count 快速计算表记录数（非精确）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ClientScopes/identityServer_sqlite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 参考值 -2\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":27:33.896  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" N - Select * From ClientScopes Order By Id Desc limit "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":27:33.896  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" N - Select Count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" From ClientScopes\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":27:33.897  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" N - Select * From ClientScopes Order By Id Desc limit "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":27:33.898  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" Y "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),t._v(" SHOW TABLE STATUS FROM "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("IdentityServer"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":27:33.899  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" Y "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),t._v(" 创建表：ClientScopes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":27:33.899  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" Y "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),t._v(" Create Table If Not Exists ClientScopes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tId INT NOT NULL AUTO_INCREMENT,\n\tScope TEXT NOT NULL,\n\tClientId BIGINT NOT NULL,\n\tPrimary Key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" DEFAULT "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8mb4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":27:33.902  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" Y "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),t._v(" Create Index IX_ClientScopes_ClientId On ClientScopes "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ClientId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":27:33.913  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" N - Insert Into ClientScopes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id,Scope,ClientId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'openid'")]),t._v(",1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'admin_api'")]),t._v(",1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'admin_ui_profile'")]),t._v(",1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"遇到的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遇到的问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 遇到的问题")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("每次的不顺都伴随 bug 的发现，此次第一个问题是报索引超出数组范围，原因是数据库会话根据列名称获取序号时，列名称 Name 为空，此处是通过源数据库获取的表结构信息列名 Name 为空，而通过实体类获取的列名 Name 才有值，所以上面代码多了一段处理列名的操作")])]),t._v(" "),a("li",[a("p",[t._v("第二个问题发生于创建 mysql 表时，报"),a("code",[t._v("BLOB/TEXT column 'CustomerName' used in key specification without a key length")]),t._v("。这种错误有两处，一处是创建索引，比如 Name 是 text 类型，在 mysql 里面不能指明长度，而索引只能索引固定长度的字符，或者前多少个字符，所以要将 text 类型改成 varchar 类型。另一处就是 id 也是 text 类型，作为主键，唯一，在 mysql 中也不允许没有指定长度，还是得改")])])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/xxred/DatabaseMigration.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("例子源码"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("代码不规范，维护两行泪，迁移过程的主要问题还是表设计的问题，我们设计表的过程尽量用通用的数据类型，这样在跨数据库的时候方便转换。同时根据需求尽量设计合理一点，比如作为主键的 id，如果设计为 text 类型，没有长度限制，或许在某个数据库可以，另一个数据库里却有问题。中间可能涉及存储空间、查找和索引的等（性能）问题")]),t._v(" "),a("li",[t._v("常用数据类型有 int、nvarchar、ntext、decimal 和 datetime2")])])])},[],!1,null,null,null);s.default=e.exports}}]);