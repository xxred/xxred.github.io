(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{333:function(t,e,r){"use strict";r.r(e);var s=r(0),a=Object(s.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"nuget-跨平台身份验证"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nuget-跨平台身份验证","aria-hidden":"true"}},[t._v("#")]),t._v(" NuGet 跨平台身份验证")]),t._v(" "),r("ul",[r("li",[t._v("在开发过程中使用 Visual Studio 客户端还原 nuget 包，对于私有源，它会弹出一个交互窗口以供用户填写用户名密码。但是在打造 CI/CD 流水线时，使用命令还原包，并且无人值守，这个情况下，怎么做身份证验证，且听我慢慢道来")])]),t._v(" "),r("h2",{attrs:{id:"寻寻觅觅"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#寻寻觅觅","aria-hidden":"true"}},[t._v("#")]),t._v(" 寻寻觅觅")]),t._v(" "),r("ul",[r("li",[t._v("上一篇"),r("a",{attrs:{href:"https://www.imooc.com/article/288681",target:"_blank",rel:"noopener noreferrer"}},[t._v("appveyor docker 镜像制作"),r("OutboundLink")],1),t._v("中制做了 docker 镜像，地址是 https://hub.docker.com/r/xxred/appveyor")]),t._v(" "),r("li",[t._v("由于是私有源，访问需要认证，那么使用"),r("code",[t._v("dotnet restore")]),t._v("命令还原包的时候自然是无返回无法授权的结果。本着这个问题肯定有人问过，于是乎上 gitlab 的 issue 寻找解决方案")]),t._v(" "),r("li",[t._v("找到这个"),r("a",{attrs:{href:"https://github.com/NuGet/Home/issues/6486",target:"_blank",rel:"noopener noreferrer"}},[t._v("issue"),r("OutboundLink")],1),t._v("，并在其中找到一个认证插件https://github.com/Microsoft/artifacts-credprovider#readme 。Azure Artifacts Credential Provider 可自动获取恢复 NuGet 包所需的凭据")])]),t._v(" "),r("h2",{attrs:{id:"撸起袖子干"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#撸起袖子干","aria-hidden":"true"}},[t._v("#")]),t._v(" 撸起袖子干")]),t._v(" "),r("ul",[r("li",[t._v("参照文档，下载插件进行测试，或者执行"),r("a",{attrs:{href:"https://github.com/microsoft/artifacts-credprovider/blob/master/helpers/installcredprovider.ps1",target:"_blank",rel:"noopener noreferrer"}},[t._v("脚本"),r("OutboundLink")],1),t._v("安装。插件放置位置如下")]),t._v(" "),r("li",[t._v('通过环境变量指定：NUGET_PLUGIN_PATHS="~/.nuget/plugins"')]),t._v(" "),r("li",[t._v("或者放在用户文件中指定位置：")])]),t._v(" "),r("div",{staticClass:"language-text extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(".nuget\n   plugins\n       netfx\n           myFeedCredentialProvider\n               myFeedCredentialProvider.exe\n               nuget.protocol.dll\n       netcore\n           myFeedCredentialProvider\n               myFeedCredentialProvider.dll\n               nuget.protocol.dll\n")])])]),r("ul",[r("li",[t._v("设置账号密码：通过设置环境变量 VSS_NUGET_EXTERNAL_FEED_ENDPOINTS，包含服务端点、用户名和访问令牌数组的 JSON，用于在 nuget.config 中对端点进行身份验证。示例：")])]),t._v(" "),r("div",{staticClass:"language-json extra-class"},[r("pre",{pre:!0,attrs:{class:"language-json"}},[r("code",[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"endpointCredentials"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"endpoint"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://example.index.json"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"username"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"optional"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"password"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accesstoken"')]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("ul",[r("li",[t._v("为了方便，可以做成镜像，集成这个插件和认证信息，但我比较懒，就先用命令完成安装，并每次启动构建都安装，linux 下命令如下")])]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" ~/.nuget "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/.nuget "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -O "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" https://github.com/microsoft/artifacts-credprovider/releases/download/0.1.18/Microsoft.NuGet.CredentialProvider.tar.gz "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xvf "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v("\n")])])]),r("h2",{attrs:{id:"后知后觉"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#后知后觉","aria-hidden":"true"}},[t._v("#")]),t._v(" 后知后觉")]),t._v(" "),r("ul",[r("li",[t._v("完成任务后，回头看看运行原理是啥，参考文档 https://docs.microsoft.com/zh-cn/nuget/reference/extensibility/nuget-cross-platform-plugins\n"),r("ul",[r("li",[t._v("NuGet 发现可用插件。")]),t._v(" "),r("li",[t._v("如果适用，NuGet 将循环访问的优先级顺序并开始逐个进行中的插件。")]),t._v(" "),r("li",[t._v("NuGet 将使用第一个插件，可以处理该请求。")]),t._v(" "),r("li",[t._v("在不再需要时，将关闭插件。")])])]),t._v(" "),r("li",[t._v("插件协议：https://docs.microsoft.com/zh-cn/nuget/reference/extensibility/nuget-cross-platform-plugins#protocol-messages-index")]),t._v(" "),r("li",[t._v("还有缓存功能，这是提升构建的速度关键，特别是多个项目使用同一个私有源的时候。不仅下载安装插件，安全验证和实例化插件的代价也是高昂。所以不仅要做好镜像，提前下载安装插件，并且缓存插件返回过的信息，存储结果如下：\n"),r("ul",[r("li",[t._v("Windows：%localappdata%\\NuGet\\plugins-cache")]),t._v(" "),r("li",[t._v("Mac/Linux：~/.local/share/NuGet/plugins-cache")]),t._v(" "),r("li",[t._v("使用 NUGET_PLUGINS_CACHE_PATH 环境变量替代。")])])]),t._v(" "),r("li",[t._v("缓存下载过的 nuget 包，也是可以考虑的，每次构建项目直接使用本地缓存，连认证都省去")])]),t._v(" "),r("h2",{attrs:{id:"收获"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#收获","aria-hidden":"true"}},[t._v("#")]),t._v(" 收获")]),t._v(" "),r("ul",[r("li",[t._v("奉上相关的 Dockerfile 文件")])]),t._v(" "),r("div",{staticClass:"language-Dockerfile extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('FROM aspnetcore:2.2 AS base\nWORKDIR /app\nEXPOSE 80\nEXPOSE 443\n\nFROM dotnetcoresdk:2.2 AS build\nARG VSS_NUGET_EXTERNAL_FEED_ENDPOINTS\nRUN mkdir ~/.nuget && cd ~/.nuget && wget -O tar https://github.com/microsoft/artifacts-credprovider/releases/download/0.1.18/Microsoft.NuGet.CredentialProvider.tar.gz && tar -xvf tar\nWORKDIR /src\nCOPY ["IdentityServer4/IdentityServer4.csproj", "IdentityServer4/"]\nCOPY ["IdentityServer4/Nuget.config", "IdentityServer4/"]\nCOPY ["IdentityServer4.XCode/IdentityServer4.XCode.csproj", "IdentityServer4.XCode/"]\nRUN dotnet restore "IdentityServer4/IdentityServer4.csproj" --configfile "IdentityServer4/Nuget.config"\nCOPY . .\nWORKDIR /src/IdentityServer4\nRUN dotnet build "IdentityServer4.csproj" -c Release -o /app  --no-restore\n\nFROM build AS publish\nRUN dotnet publish "IdentityServer4.csproj" -c Release -o /app  --no-restore\n\nFROM base AS final\nWORKDIR /app\nCOPY --from=publish /app .\nENTRYPOINT ["dotnet", "IdentityServer4.dll"]\n\n')])])]),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("ul",[r("li",[t._v("插件及文档地址：https://github.com/Microsoft/artifacts-credprovider")]),t._v(" "),r("li",[t._v("安装： https://github.com/Microsoft/artifacts-credprovider#setup")]),t._v(" "),r("li",[t._v("命令行中使用： https://github.com/Microsoft/artifacts-credprovider#environment-variables")])])])},[],!1,null,null,null);e.default=a.exports}}]);