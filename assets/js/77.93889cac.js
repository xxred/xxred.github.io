(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{334:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"发布"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布","aria-hidden":"true"}},[e._v("#")]),e._v(" 发布")]),e._v(" "),t("h2",{attrs:{id:"发布到-ubuntu"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布到-ubuntu","aria-hidden":"true"}},[e._v("#")]),e._v(" 发布到 ubuntu")]),e._v(" "),t("ul",[t("li",[e._v("https://docs.microsoft.com/zh-cn/aspnet/core/host-and-deploy/linux-nginx?view=aspnetcore-2.1#create-the-service-file")])]),e._v(" "),t("h2",{attrs:{id:"asp-net-core-发布到-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#asp-net-core-发布到-docker","aria-hidden":"true"}},[e._v("#")]),e._v(" asp.net core 发布到 docker")]),e._v(" "),t("ul",[t("li",[e._v("asp.net core 打包成镜像运行在 docker 中，首先需要找到与项目对应的基础镜像，接着复制源码到容器或者克隆代码，然后执行构建打包命令，最后将发布后文件放到只有运行时的镜像，打包完成。")]),e._v(" "),t("li",[e._v("以上就是大致过程，发布有两种选择，一种是打包成 nuget，发布到 nuget.org；另一种是打包成 docker 镜像，发布到 docker hub")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("asp.net core 一个官方例子"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dockerfile 命令"),t("OutboundLink")],1),e._v("，必看。")])]),e._v(" "),t("h3",{attrs:{id:"发布到-nuget"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布到-nuget","aria-hidden":"true"}},[e._v("#")]),e._v(" 发布到 nuget")]),e._v(" "),t("div",{staticClass:"language-dockerfile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('FROM mcr.microsoft.com/dotnet/core/sdk:2.2\nRUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo \'Asia/Shanghai\' >/etc/timezone # 设置时区\nARG AppKey\nARG Source\nARG ProjName=ProjName\nWORKDIR /src\nCOPY ["${ProjName}/${ProjName}.csproj", "${ProjName}/"]\nRUN dotnet restore "${ProjName}/${ProjName}.csproj"\nCOPY . .\nWORKDIR /src/${ProjName}\nRUN dotnet pack "${ProjName}.csproj" -c Release -o /app\n\nWORKDIR /app\nRUN dotnet nuget push *.nupkg -k ${AppKey} -s ${Source}\n')])])]),t("ul",[t("li",[e._v("以上 dockerfile 是比较通用的，通过参数传入项目名称、nuget 的 key 和 source，只是这里默认了这个项目文件 csproj 名称与文件夹名称相同。")]),e._v(" "),t("li",[e._v("用法是：")])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("docker build --build-arg "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("AppKey")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$NugetAppKey")]),e._v(" --build-arg "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("Source")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$NugetSource")]),e._v(" -t "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$CI_COMMIT_SHORT_SHA")]),e._v(":latest "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v("\n")])])]),t("ul",[t("li",[e._v("因为这里并不需要这个镜像，所以每次发布之后可以移除这个镜像")])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("docker rmi "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$CI_COMMIT_SHORT_SHA")]),e._v(":latest\n")])])]),t("h3",{attrs:{id:"发布到-docker-仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布到-docker-仓库","aria-hidden":"true"}},[e._v("#")]),e._v(" 发布到 docker 仓库")]),e._v(" "),t("div",{staticClass:"language-dockerfile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('FROM mcr.microsoft.com/dotnet/core/aspnet:2.2 AS base\nWORKDIR /app\nEXPOSE 80\nEXPOSE 443\n\nFROM mcr.microsoft.com/dotnet/core/sdk:2.2 AS build\nARG ProjName=ProjName\nWORKDIR /src\nCOPY ["${ProjName}/${ProjName}.csproj", "${ProjName}/"]\nRUN dotnet restore "${ProjName}/${ProjName}.csproj"\nCOPY . .\nWORKDIR /src/${ProjName}\nRUN dotnet build "${ProjName}.csproj" -c Release -o /app  --no-restore\n\nFROM build AS publish\nRUN dotnet publish "${ProjName}.csproj" -c Release -o /app  --no-restore\n\nFROM base AS final\nWORKDIR /app\nCOPY --from=publish /app .\nENTRYPOINT ["dotnet", "${ProjName}.dll"]\n')])])]),t("ul",[t("li",[e._v("以上 dockerfile，在 dotnetsdk 中发布项目，最后生成的镜像使用 aspnet，这也是两个镜像的区别，sdk 可以构建项目，aspnet 是 runtime，只能运行项目。")]),e._v(" "),t("li",[e._v("用法：")])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("docker build -t "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ProjName}")]),e._v(":latest --build-arg "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ProjName")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ProjName}")]),e._v('"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v("\n")])])]),t("ul",[t("li",[e._v("发布到 docker 仓库，先登录后推送")])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 登录")]),e._v("\ndocker login -u "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$REGISTRY_USER")]),e._v('"')]),e._v(" -p "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$REGISTRY_PASSWORD")]),e._v('"')]),e._v(" localhost:32000\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 推送")]),e._v("\ndocker tag "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ProjName}")]),e._v(":latest localhost:32000/"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ProjName}")]),e._v(":latest "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" docker push localhost:32000/"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ProjName}")]),e._v(":latest\n")])])]),t("h3",{attrs:{id:"注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意","aria-hidden":"true"}},[e._v("#")]),e._v(" 注意")]),e._v(" "),t("ul",[t("li",[e._v("dockerfile 中的 ProjName 变量可外面传入，也可设置默认值，只是为了更加通用，修改一个值即可用于其它项目")]),e._v(" "),t("li",[e._v("打包 docker 的开放端口设置需要注意，如果程序运行监听的端口与开放端口不一致，可通过设置"),t("code",[e._v("ASPNETCORE_URLS")]),e._v("来解决")])]),e._v(" "),t("div",{staticClass:"language-dockerfile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('ENV ASPNETCORE_URLS="http://*:80/"\n')])])])])},[],!1,null,null,null);a.default=r.exports}}]);