(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{277:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"gitlab-runner-的-executors-之-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-runner-的-executors-之-docker","aria-hidden":"true"}},[t._v("#")]),t._v(" gitlab-runner 的 executors 之 docker")]),t._v(" "),a("ul",[a("li",[t._v("GitLab Runner 实现了许多执行程序，可用于在不同的场景中运行构建。所有执行程序分别为：\n"),a("ul",[a("li",[t._v("SSH")]),t._v(" "),a("li",[t._v("Shell")]),t._v(" "),a("li",[t._v("Parallels")]),t._v(" "),a("li",[t._v("VirtualBox")]),t._v(" "),a("li",[t._v("Docker")]),t._v(" "),a("li",[t._v("Docker Machine (auto-scaling)")]),t._v(" "),a("li",[t._v("Kubernetes")]),t._v(" "),a("li",[t._v("Custom")])])]),t._v(" "),a("li",[t._v("本文主要介绍 docker 执行程序：\n"),a("ul",[a("li",[t._v("两种不同的使用方式")]),t._v(" "),a("li",[t._v("踩过的坑")]),t._v(" "),a("li",[t._v("一些例子与经验")])])]),t._v(" "),a("li",[t._v("这是一个很好地选择。因为它可以提供一个干净的构建环境，项目所有依赖项都可以放到 docker 镜像中。同时，它还可以轻松创建具有依赖服务的构建环境，比如 MySQL。参考 https://docs.gitlab.com/runner/executors/README.html")]),t._v(" "),a("li",[t._v("GitLab CI/CD 工作原理： https://docs.gitlab.com/ee/ci/introduction/index.html#how-gitlab-cicd-works")]),t._v(" "),a("li",[t._v("在 GitLab CI/CD 中构建 Docker 镜像：https://docs.gitlab.com/ee/ci/docker/using_docker_build.html")])]),t._v(" "),a("h2",{attrs:{id:"两种使用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种使用方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 两种使用方式")]),t._v(" "),a("h3",{attrs:{id:"docker-in-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-in-docker","aria-hidden":"true"}},[t._v("#")]),t._v(" docker-in-docker")]),t._v(" "),a("ul",[a("li",[t._v("文档：https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-executor")]),t._v(" "),a("li",[t._v("这种方式是使用需要运行在特权模式"),a("code",[t._v("privileged")]),t._v("下的特殊的 Docker 镜像——docker-in-docker（dind）和所安装的 docker 工具来执行脚本")]),t._v(" "),a("li",[t._v("GitLab Runner 注册选择 docker 和"),a("code",[t._v("privileged")]),t._v("模式")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gitlab-runner register -n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --url https://gitlab.com/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --registration-token REGISTRATION_TOKEN "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --executor docker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --description "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My Docker Runner"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --docker-image "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker:stable"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --docker-privileged\n")])])]),a("ul",[a("li",[a("p",[t._v("以上命令将注册一个使用"),a("code",[t._v("docker:stable")]),t._v("镜像的 Runner，"),a("strong",[t._v("它使用"),a("code",[t._v("privileged")]),t._v("模式启动构建和服务容器")]),t._v("。这也是使用"),a("a",{attrs:{href:"https://blog.docker.com/2013/09/docker-can-now-run-within-docker/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker-in-docker"),a("OutboundLink")],1),t._v("模式必须使用的设置")])]),t._v(" "),a("li",[a("blockquote",[a("p",[t._v("注意：通过"),a("code",[t._v("--docker-privileged")]),t._v("启用特权模式，禁用容器的所有安全机制，并将主机暴露在权限提升中，这可能导致容器中断。更多信息查看 Docker 官方文档"),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities",target:"_blank",rel:"noopener noreferrer"}},[t._v("运行时特权和 linux 功能"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("p",[t._v("上面的命令得到对应配置文件如下")])])]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("runners")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("url")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://gitlab.com/"')]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("token")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" TOKEN\n   "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("executor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker"')]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("runners.docker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("tls_verify")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("image")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker:stable"')]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("privileged")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("disable_cache")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("volumes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/cache"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("runners.cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Insecure")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v(".gitlab-ci.yml")]),t._v("例子如下，参考"),a("a",{attrs:{href:"https://gitlab.com/gitlab-examples/docker/tree/master",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitlab.com/gitlab-examples/docker"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("dind\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker build "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t test .\n")])])]),a("ul",[a("li",[t._v("缺点和不足如下：\n"),a("ul",[a("li",[t._v("使用 docker-in-docker 时，每个作业都处于干净的环境中，没有过去的历史记录。并发任务执行正常，因为每个构建都有自己的 Docker 引擎实例，因此它们不会相互冲突。但这也意味着工作可能会变慢，因为没有层缓存")]),t._v(" "),a("li",[t._v("默认情况下，docker:dind 使用的--storage-driver vfs 是最慢的形式。要使用其他驱动程序，请参阅 "),a("a",{attrs:{href:"https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#using-the-overlayfs-driver",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 overlayfs 驱动程序"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("由于 docker:dind 容器和运行器容器不共享其根文件系统，因此任务的工作目录可用作子容器的安装点。例如，如果您要与子容器共享文件，则可以在/builds/$CI_PROJECT_PATH 其下创建子目录并将其用作挂载点（有关更详细的说明，请查看"),a("a",{attrs:{href:"https://gitlab.com/gitlab-org/gitlab-ce/issues/41227",target:"_blank",rel:"noopener noreferrer"}},[t._v("问题＃41227"),a("OutboundLink")],1),t._v("）")])])])]),t._v(" "),a("h3",{attrs:{id:"使用-docker-套接字绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-docker-套接字绑定","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 Docker 套接字绑定")]),t._v(" "),a("ul",[a("li",[t._v("另一种方法是绑定"),a("code",[t._v("/var/run/docker.sock")]),t._v("到容器中，以便 Docker 在该映像的上下文中可用")]),t._v(" "),a("li",[a("blockquote",[a("p",[t._v("注意：如果在使用 GitLab Runner 11.11 或更高版本时绑定 Docker 套接字，则无法再将其 docker:dind 用作服务，因为也会对服务进行卷绑定，从而使这些服务不兼容")])])]),t._v(" "),a("li",[t._v("Runner 注册命令如下")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gitlab-runner register -n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --url https://gitlab.com/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --registration-token REGISTRATION_TOKEN "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --executor docker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --description "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My Docker Runner"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --docker-image "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker:stable"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --docker-volumes /var/run/docker.sock:/var/run/docker.sock\n")])])]),a("ul",[a("li",[t._v("以上命令将注册一个使用"),a("code",[t._v("docker:stable")]),t._v("镜像的 Runner。"),a("strong",[t._v("注意：他是用的是 Runner 本身的 Docekr 守护程序，而 docker 命令生成的任何容器都是 Runner 的兄弟，而不是 Runner 的子节点。")])]),t._v(" "),a("li",[t._v("上面的命令得到对应配置文件如下")])]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("runners")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("url")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://gitlab.com/"')]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("token")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" REGISTRATION_TOKEN\n   "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("executor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker"')]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("runners.docker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("tls_verify")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("image")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker:stable"')]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("privileged")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("disable_cache")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("volumes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/run/docker.sock:/var/run/docker.sock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/cache"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("runners.cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Insecure")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),a("ul",[a("li",[t._v("对应的"),a("code",[t._v(".gitlab-ci.yml")]),t._v("例子如下")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("stable\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("before_script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker info\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker build "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t my"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("image .\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker run my"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("image /script/to/run/tests\n")])])]),a("ul",[a("li",[t._v("可以看到，这个模式不需要使用服务，直接通过套接字通信。此模式也是有一些需要注意的地方：\n"),a("ul",[a("li",[t._v("由于是共享 docker 守护程序，项目的操作会真实产生影响。比如项目如果运行"),a("code",[t._v("docker rm -f $(docker ps -a -q)")]),t._v("，那么将会删除所有容器")]),t._v(" "),a("li",[t._v("并发可能会有冲突，比如创建相同的名称的容器")]),t._v(" "),a("li",[t._v("由于创建的容器是 Runnner 的兄弟，所以文件与目录的共享是在主机上下文完成，而不是构建容器上下文")])])])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[t._v("选择两种方式都各有好坏，可根据实际情况进行选择。这里还是推荐用第二种，因为第一种真的很干净，所以很慢")]),t._v(" "),a("li",[t._v("做好权限管理和控制，避免危险的脚本")]),t._v(" "),a("li",[t._v("还有一点是，指定镜像版本的时候，最好指定具体的版本。比如使用第一种模式，引入服务"),a("code",[t._v("docker:dind")]),t._v("，最好使用"),a("code",[t._v("docker:18.09.8-dind")]),t._v("。避免镜像拉取策略，每次拉取最新的镜像，导致实际是"),a("code",[t._v("docker:19.0-dind")]),t._v("，与安装的 docker 版本不符，发生一些意想不到的错误")])])])},[],!1,null,null,null);s.default=n.exports}}]);