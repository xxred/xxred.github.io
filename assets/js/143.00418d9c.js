(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{263:function(e,t,l){"use strict";l.r(t);var i=l(0),o=Object(i.a)({},function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h1",{attrs:{id:"net-core中的反射"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#net-core中的反射","aria-hidden":"true"}},[e._v("#")]),e._v(" .net core中的反射")]),e._v(" "),l("ul",[l("li",[e._v("不同上下文的类型不能互转，可通过中间类型比如系统类库某个接口，来进行换换")]),e._v(" "),l("li",[e._v('System.Type.GetType("Microsoft.Data.Sqlite.SqliteFactory,Microsoft.Data.Sqlite")')]),e._v(" "),l("li",[e._v('System.Type.GetType("MySql.Data.MySqlClient.MySqlClientFactory,MySql.Data")')]),e._v(" "),l("li",[e._v("需要放在根目录，或者程序引用（nuget）它了，需要指定程序集名称，否则无法获取，即使存在于Assemblies，因为这个方法只会从当前程序集加载")]),e._v(" "),l("li",[e._v("AppDomain.CurrentDomain.GetAssemblies()")]),e._v(" "),l("li",[e._v("使用X组件 typeName.GetTypeEx(true);获取类型，一个在根目录一个在系统，会出来两个，但是根目录的dll没有被占用，都指向系统那个")]),e._v(" "),l("li",[e._v('System.Reflection.Assembly.Load("Microsoft.Data.Sqlite")')]),e._v(" "),l("li",[e._v("dll需要存在于根目录或者nuget引用了，参数是"),l("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/dotnet/framework/reflection-and-codedom/specifying-fully-qualified-type-names",target:"_blank",rel:"noopener noreferrer"}},[e._v("完全限定的类型"),l("OutboundLink")],1),e._v("名称")]),e._v(" "),l("li",[e._v('System.Reflection.Assembly.LoadFile("C:\\Users\\12504\\Desktop\\Microsoft.Data.Sqlite.dll").GetType("Microsoft.Data.Sqlite.SqliteFactory")')]),e._v(" "),l("li",[e._v("用不到的dll不会加载进来，deps.json记录依赖，")])])])},[],!1,null,null,null);t.default=o.exports}}]);