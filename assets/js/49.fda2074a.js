(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{339:function(t,r,e){"use strict";e.r(r);var a=e(0),s=Object(a.a)({},function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"调试-net-framework-源代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调试-net-framework-源代码","aria-hidden":"true"}},[t._v("#")]),t._v(" 调试 .NET Framework 源代码")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/visualstudio/debugger/how-to-debug-dotnet-framework-source",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何调试 .NET Framework 源代码"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/visualstudio/debugger/specify-symbol-dot-pdb-and-source-files-in-the-visual-studio-debugger",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 Visual Studio 调试器中指定符号 (.pdb) 和源文件"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://referencesource.microsoft.com/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v(".NET Framework 源代码下载"),e("OutboundLink")],1)])])]),t._v(" "),e("h2",{attrs:{id:"条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#条件","aria-hidden":"true"}},[t._v("#")]),t._v(" 条件")]),t._v(" "),e("ul",[e("li",[t._v("加载符号文件：调试之前要加载符号文件，F11 步入才有可能触发源码加载或下载")]),t._v(" "),e("li",[t._v("加载源码（不会自动加载源码的情况）：加载符号文件之后，调试器会根据符号文件记录的源码位置查找并打开源码。我们要做的就是触发加载源码的弹窗，手动选择上面下载的源码。")])]),t._v(" "),e("h2",{attrs:{id:"提前断点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提前断点","aria-hidden":"true"}},[t._v("#")]),t._v(" 提前断点")]),t._v(" "),e("ul",[e("li",[t._v("选择源码文件之后，即可开始调试。此时打开的源码可以在里面其它地方断点，运行到的时候就会命中断点，但前提是要加载它对应的符号文件")]),t._v(" "),e("li",[t._v("如果需要在运行前断点，并在运行到断点行时命中，需要先加载符号文件：在调试-调试堆栈窗口选择需要断点的模块，单击右键选择始终加载，那么下次运行就会自动加载符号了。也可以在调试堆栈转到模块列表，然后设置加载。或者在工具-调试-符号-始终加载指定模块，填写 dll 名包括 dll")])]),t._v(" "),e("h2",{attrs:{id:"调试-dotnetcore"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调试-dotnetcore","aria-hidden":"true"}},[t._v("#")]),t._v(" 调试 DotNetCore")]),t._v(" "),e("ul",[e("li",[t._v("DotNetCore 是开源的，源码位于 github，所有通过 Nuget 分发的包都会附带构建时的源码，源码版本跟运行的 dll 版本一一对应，就不会像调试 DotNetFramework 源码一样差异过大")]),t._v(" "),e("li",[t._v("在运行程序时自动从 github 下载病并加载加载 pdb 符号文件。如果加载全部符号启动将变得异常缓慢，所以仅选择需要调试的 dll 即可")])]),t._v(" "),e("h3",{attrs:{id:"加载符号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#加载符号","aria-hidden":"true"}},[t._v("#")]),t._v(" 加载符号")]),t._v(" "),e("ul",[e("li",[t._v("首先找到需要调试代码所在的 dll 名称，在需要调试的方法上点击鼠标右键-转到定义。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1057748/201809/1057748-20180910234736792-1638492379.png",alt:" "}})]),t._v(" "),e("ul",[e("li",[t._v("此时可能会从服务器上下载源码，需要等一会。下载完之后自动切换标签页，接下来要做的有两步，断个点，然后复制一下类名或者命名空间到"),e("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/dotnet/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v(".Net API 浏览器"),e("OutboundLink")],1),t._v("搜索。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1057748/201809/1057748-20180910235518435-105220052.png",alt:" "}}),e("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1057748/201809/1057748-20180911000449872-1457731347.png",alt:" "}})]),t._v(" "),e("ul",[e("li",[e("p",[t._v("点击搜索结果，跳转到类详情页，复制 dll 全称。"),e("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1057748/201809/1057748-20180911000745928-1333852240.png",alt:" "}})])]),t._v(" "),e("li",[e("p",[t._v("在 VS 依次操作：工具-选项-调试-符号-指定包含的模块-右上角加号-粘贴-确定。"),e("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1057748/201809/1057748-20180911001439925-336201563.png",alt:" "}})])]),t._v(" "),e("li",[e("p",[t._v("完成符号准备工作，程序运行时将自动从符号服务器下载 pdb 符号文件并加载进程序。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("注意")]),t._v("：如果是发布的第三方包，请把 pdb 删掉，不要一起发布，因为该 pdb 文件包含的源码地址时打包者电脑地址，其他人加载了改文件将找不到源码。而通过"),e("code",[t._v("dotnet pack --include-symbols")]),t._v("命令打包生成的 pdb 不包含本地源码地址。这样就不限于打包者本人直接调试通过 nuget 发布的 dll，其他人也将可以通过本文所述方式进行调试，无需自己拉去源码编译 dll。"),e("a",{attrs:{href:"https://github.com/NuGet/Home/wiki/NuGet-Package-Debugging-&-Symbols-Improvements#nuget-debugging-experience-today",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关参考链接"),e("OutboundLink")],1)])])]),t._v(" "),e("h3",{attrs:{id:"调试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调试","aria-hidden":"true"}},[t._v("#")]),t._v(" 调试")]),t._v(" "),e("ul",[e("li",[t._v("一切顺利的话，运行程序，加载完符号，断点是红色实心，否则就要检查符号是否正常加载。接下来开始愉快的调试之旅")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1057748/201809/1057748-20180911003345305-244368451.png",alt:" "}})]),t._v(" "),e("h2",{attrs:{id:"运行时加载符号调试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行时加载符号调试","aria-hidden":"true"}},[t._v("#")]),t._v(" 运行时加载符号调试")]),t._v(" "),e("ul",[e("li",[t._v("此方法两个框架都适合，在调试自己的代码时，通过调用堆栈切换，触发加载符号的对话框，加载符号即可进行调试，但是下次还要调试时的话要重复此操作")])]),t._v(" "),e("h3",{attrs:{id:"打开调用堆栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打开调用堆栈","aria-hidden":"true"}},[t._v("#")]),t._v(" 打开调用堆栈")]),t._v(" "),e("ul",[e("li",[t._v("首先在调试时打开调用堆栈。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1057748/201809/1057748-20180911004920583-1340863377.png",alt:" "}}),t._v(" "),e("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1057748/201809/1057748-20180911004849457-754291621.png",alt:" "}})]),t._v(" "),e("h3",{attrs:{id:"调试中加载符号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调试中加载符号","aria-hidden":"true"}},[t._v("#")]),t._v(" 调试中加载符号")]),t._v(" "),e("ul",[e("li",[t._v("未加载符号的堆栈时灰色，双击它，自动出现加载符号页"),e("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1057748/201809/1057748-20180911005129316-1707176975.png",alt:" "}}),t._v("点击加载，将自动加载符号并跳转到源码页，在需要调试的地方断点即可开始调试")]),t._v(" "),e("li",[t._v("类似的，调试 DotNetFramework 源码，可加载本地下载好的符号文件。调试时如果找不到源码文件会自动弹出选择源码的对话框，这时候再选择下载好的源码也可开始调试")])]),t._v(" "),e("h2",{attrs:{id:"注意"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),e("ul",[e("li",[t._v("下载的 DotNetFramework 源码可能跟引用的版本不是完全对应，这是需要注意的")])])])},[],!1,null,null,null);r.default=s.exports}}]);