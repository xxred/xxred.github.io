(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{283:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"gitlab-runner"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-runner","aria-hidden":"true"}},[t._v("#")]),t._v(" gitlab-runner")]),t._v(" "),a("ul",[a("li",[t._v("gitlab-runner 是一个开源的与 gitlab CI 配合使用的项目，用于运行任务，并将结果返回 gitlab")]),t._v(" "),a("li",[t._v("本文通过"),a("code",[t._v("docker in docker")]),t._v("的方式，即在具有特权模式的 Docker 中使用 Docker，通过 gitlab-runner 使用 docker 的来构建项目，完成打包，测试，发布等任务。这样 gitlab-runner 只是需要 Dockerfile 即可，可方便日后使用其他 CI/CD 工具。同时本地调试也十分方便")]),t._v(" "),a("li",[t._v("文档地址：https://docs.gitlab.com/runner")])]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("ul",[a("li",[t._v("参考文档 https://docs.gitlab.com/runner/install/docker.html")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("docker run -d --name gitlab-runner --restart always "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   -v /srv/gitlab-runner/config:/etc/gitlab-runner "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   -v /var/run/docker.sock:/var/run/docker.sock "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   gitlab/gitlab-runner:latest\n")])])]),a("h2",{attrs:{id:"注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注册","aria-hidden":"true"}},[t._v("#")]),t._v(" 注册")]),t._v(" "),a("ul",[a("li",[t._v("安装好 gitlab-runner 后，需要进行注册，gitlab 才会出现 runner 列表。注册前需要准备好地址和 token，管理员进入"),a("strong",[t._v("管理中心")]),t._v(">"),a("strong",[t._v("概览")]),t._v(">"),a("strong",[t._v("Runner")]),t._v("可查看 runner 列表、url 和注册令牌")]),t._v(" "),a("li",[t._v("如果想要为某群组或者项目设置 runner，可在对应群组或者项目的"),a("strong",[t._v("设置")]),t._v(">"),a("strong",[t._v("CI/CD")]),t._v(">"),a("strong",[t._v("Runner")]),t._v("获取 url 和 token")]),t._v(" "),a("li",[t._v("首先进入容器交互模式")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it gitlab-runner "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n")])])]),a("ul",[a("li",[t._v("输入命令"),a("code",[t._v("gitlab-runner register")]),t._v("进行注册，按照提示和文档说明一步步填写即可")]),t._v(" "),a("li",[t._v("也可一条命令完成注册")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gitlab-runner register "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --non-interactive "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --url "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://gitlab.com/"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --registration-token "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PROJECT_REGISTRATION_TOKEN"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --executor "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --docker-image alpine:latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --description "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker-runner"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --tag-list "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker,aws"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --run-untagged"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --locked"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --access-level"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"not_protected"')]),t._v("\n")])])]),a("ul",[a("li",[t._v("注册 runner 参考：https://docs.gitlab.com/runner/register/index.html#docker")]),t._v(" "),a("li",[t._v("docker 执行者：https://docs.gitlab.com/runner/executors/docker.html")])]),t._v(" "),a("h2",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("ul",[a("li",[t._v("在配置文件"),a("code",[t._v("/etc/gitlab-runner/config.toml")]),t._v("中添加 privileged 标记，这样可以在容器中使用 docker 的一些功能")]),t._v(" "),a("li",[t._v("参考：https://docs.gitlab.com/runner/executors/docker.html#use-docker-in-docker-with-privileged-mode")]),t._v(" "),a("li",[t._v("其它命令：https://docs.gitlab.com/runner/commands/README.html")])]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("runners")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("executor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("runners.docker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("privileged")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),a("ul",[a("li",[t._v("完整的例子")])]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("runners")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker-runner"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("url")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://192.168.99.100:8900/"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("token")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zLBu8yXEFPGKaaasZopn"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("executor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("clone_url")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://192.168.99.100:8900/"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("runners.custom_build_dir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("runners.docker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("tls_verify")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("image")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apline:latest"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("privileged")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("disable_entrypoint_overwrite")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("oom_kill_disable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("disable_cache")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("volumes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/cache"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("shm_size")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("ul",[a("li",[t._v("高级配置：https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-runners-section")])]),t._v(" "),a("h2",{attrs:{id:"环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境变量","aria-hidden":"true"}},[t._v("#")]),t._v(" 环境变量")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("通过设置环境变量，让 runner 执行的时候读取，避免在源码中记录敏感信息")])]),t._v(" "),a("li",[a("p",[t._v("在群组或者项目的设置中依次点击"),a("strong",[t._v("设置")]),t._v(">"),a("strong",[t._v("CI/CD")]),t._v(">"),a("strong",[t._v("变量")])])]),t._v(" "),a("li",[a("p",[t._v("在"),a("code",[t._v(".gitlab-ci.yml")]),t._v("文件中使用方式")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("Shell")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Usage")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("bash/sh")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("$variable")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("windows batch")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%variable%")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("PowerShell")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("$env:variable")])])])])]),t._v(" "),a("li",[a("p",[t._v("参考https://docs.gitlab.com/ce/ci/variables/README.html#via-the-ui")])]),t._v(" "),a("li",[a("p",[t._v("Dockerfile 中使用变量参考：https://docs.docker.com/engine/reference/builder/#arg")])])]),t._v(" "),a("h2",{attrs:{id:"添加-dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加-dockerfile","aria-hidden":"true"}},[t._v("#")]),t._v(" 添加 Dockerfile")]),t._v(" "),a("ul",[a("li",[t._v("文档参考：https://docs.docker.com/engine/reference/builder/")]),t._v(" "),a("li",[t._v("项目中添加 Dockerfile，接收 Source、AppKey 两个参数，并将其推送至 nuget 服务器")])]),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('FROM mcr.microsoft.com/dotnet/core/sdk:2.2-stretch\nARG AppKey\nARG Source\nWORKDIR /src\nCOPY ["A1/A1.csproj", "A1/"]\nRUN dotnet restore "A1/A1.csproj"\nCOPY . .\nWORKDIR /src/A1\nRUN dotnet pack "A1" -c Release -o /app\n\nWORKDIR /app\nRUN dotnet nuget push *.nupkg -k ${AppKey} -s ${Source}\n')])])]),a("h2",{attrs:{id:"添加-gitlab-ci-yml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加-gitlab-ci-yml","aria-hidden":"true"}},[t._v("#")]),t._v(" 添加 .gitlab-ci.yml")]),t._v(" "),a("ul",[a("li",[t._v("项目中添加 CI/CD 配置，在 gitlab 中新建可选择模板，选择 docker 模板")]),t._v(" "),a("li",[t._v("文档参考：https://docs.gitlab.com/ee/ci/yaml/README.html#validate-the-gitlab-ciyml")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This file is a template, and might need editing before it works on your project.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build-master")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Official docker image.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("dind\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("before_script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("version\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" echo $NugetAppKey\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" echo $NugetSource\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker build "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("build"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("arg AppKey=$NugetAppKey "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("build"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("arg Source=$NugetSource "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t A1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest .\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n")])])]),a("h2",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),a("ul",[a("li",[t._v("执行 docker build 的时候报错："),a("code",[t._v('time="2019-07-19T01:20:27Z" level=error msg="failed to dial gRPC: cannot connect to the Docker daemon. Is \'docker daemon\' running on this host?: dial tcp: lookup docker on 100.100.2.136:53: no such host"')]),t._v("，这个需要配置 runner，让容器跑在"),a("code",[t._v("privileged")]),t._v("模式，参考 https://docs.gitlab.com/runner/executors/docker.html#use-docker-in-docker-with-privileged-mode")]),t._v(" "),a("li",[t._v("runner 执行的时候需要拉取代码，但是拉取的链接由于种种原因在容器内很难访问，需要另外的设置或者代理才行。但是高级设置有个参数可以设置拉取代码的链接："),a("code",[t._v("clone_url")]),t._v("。文档：https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-runners-section 示例：")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("runners"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ruby-2.1-docker"')]),t._v("\n  url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://CI/"')]),t._v("\n  token "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TOKEN"')]),t._v("\n  limit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  executor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker"')]),t._v("\n  builds_dir "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n  shell "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n  environment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ENV=value"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LC_ALL=en_US.UTF-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  clone_url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://gitlab.example.local"')]),t._v("\n")])])]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[t._v("安装过程也没什么难点，有什么不对的多试几次即可")]),t._v(" "),a("li",[t._v("gitlab 的文档还是挺齐全的，如果能够把相关的文档先大概浏览一遍，将会有事半功倍的效果，省去不少麻烦")])])])},[],!1,null,null,null);s.default=n.exports}}]);